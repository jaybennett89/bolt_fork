<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #> 
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #><#

Dictionary<string, string[]> cbs = new Dictionary<string, string[]>();
cbs.Add("MapLoadLocalBegin", new[] { "string", "map", "BoltConnection", "connection" });

List<Tuple<string, string>> callbacks = new List<Tuple<string, string>>();
callbacks.Add(Tuple.Create<string, string>("MapLoadBegin", "string"));
callbacks.Add(Tuple.Create<string, string>("MapLoadDone", "string"));
callbacks.Add(Tuple.Create<string, string>("Connected", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("Disconnected", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("ConnectRequest", "UdpEndPoint"));
callbacks.Add(Tuple.Create<string, string>("ConnectFailed", "UdpEndPoint"));
callbacks.Add(Tuple.Create<string, string>("ConnectRefused", "UdpEndPoint"));
callbacks.Add(Tuple.Create<string, string>("ConnectedToServer", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("DisconnectedFromServer", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("ClientConnected", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("ClientDisconnected", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("EntityAttached", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("EntityDetached", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("ControlOfEntityGained", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("ControlOfEntityLost", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("ClientLoadedMap", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("ServerLoadedMap", "BoltConnection"));
#>
using UdpKit;
using UnityEngine;

partial class BoltCallbacksBase {
  <# foreach (var cb in callbacks) { #> 
  public virtual void <#= cb.Item1 #>(<#= (cb.Item2==null) ? "" : (cb.Item2 + " arg") #>) { }
  <# } #> 

  <# foreach (var cb in callbacks) { #> 
  internal static void <#= cb.Item1 #>Invoke(<#= (cb.Item2==null) ? "" : (cb.Item2 + " arg") #>) { 
    foreach (BoltCallbacksBase cb in callbacks) {
      cb.<#= cb.Item1 #>(<#= (cb.Item2==null) ? "" : ("arg") #>);
    }
  }
  <# } #> 
}
