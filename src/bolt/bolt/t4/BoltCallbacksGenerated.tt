<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #> 
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #><#

Dictionary<string, string[]> cbs = new Dictionary<string, string[]>();
cbs.Add("SceneLoadLocalBegin", new[] { "string", "map" });
cbs.Add("SceneLoadLocalDone", new[] { "string", "map" });
cbs.Add("SceneLoadRemoteDone", new[] { "BoltConnection", "connection", "string", "map" });

cbs.Add("Connected", new[] { "BoltConnection", "connection" });
cbs.Add("Disconnected", new[] { "BoltConnection", "connection" });
cbs.Add("ConnectRequest", new []{"UdpEndPoint", "endpoint", "byte[]", "token"});

List<Tuple<string, string>> callbacks = new List<Tuple<string, string>>();
callbacks.Add(Tuple.Create<string, string>("ConnectFailed", "UdpEndPoint"));
callbacks.Add(Tuple.Create<string, string>("ConnectRefused", "UdpEndPoint"));
callbacks.Add(Tuple.Create<string, string>("ConnectedToServer", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("DisconnectedFromServer", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("ClientConnected", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("ClientDisconnected", "BoltConnection"));
callbacks.Add(Tuple.Create<string, string>("EntityAttached", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("EntityDetached", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("ControlOfEntityGained", "BoltEntity"));
callbacks.Add(Tuple.Create<string, string>("ControlOfEntityLost", "BoltEntity"));
#>
using UdpKit;
using UnityEngine;

partial class BoltCallbacksBase {
  <# foreach (var cb in callbacks) { #> 
  public virtual void <#= cb.Item1 #>(<#= (cb.Item2==null) ? "" : (cb.Item2 + " arg") #>) { }
  <# } #> 

  <# foreach (var cb in callbacks) { #> 
  internal static void <#= cb.Item1 #>Invoke(<#= (cb.Item2==null) ? "" : (cb.Item2 + " arg") #>) { 
    BoltLog.Debug("Invoking callback <#= cb.Item1 #>");
    foreach (BoltCallbacksBase cb in callbacks) {
      cb.<#= cb.Item1 #>(<#= (cb.Item2==null) ? "" : ("arg") #>);
    }
  }
  <# } #> 

  <# foreach (var cb in cbs) { 
    var pairs = cb.Value.Select((value, index) => new { value, index } ).GroupBy(x => x.index / 2, x => x.value);
    var args = String.Join(", ", pairs.Select(x => String.Join(" ", x.ToArray())).ToArray());
    var callArgs = String.Join(", ", cb.Value.Select((value, index) => new { value, index } ).Where(x => x.index % 2 == 1).Select(x => x.value).ToArray());
  #>

  public virtual void <#= cb.Key #>(<#= args #>) { 
  }

  internal static void <#= cb.Key #>Invoke(<#= args #>) { 
    BoltLog.Debug("Invoking callback <#= cb.Key #>");
    foreach (BoltCallbacksBase cb in callbacks) {
        cb.<#= cb.Key #>(<#= callArgs #>);
    }
  }

  <# } #>
}
