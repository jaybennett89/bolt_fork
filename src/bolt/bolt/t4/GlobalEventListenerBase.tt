<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #> 
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #><#

List<Tuple<string, string[]>> callbacksList = new List<Tuple<string, string[]>>();
callbacksList.Add(Tuple.Create("BoltShutdown", new string[0]));
callbacksList.Add(Tuple.Create("BoltStarted", new string[0]));

callbacksList.Add(Tuple.Create("StreamDataReceived", new[] { "BoltConnection", "connection", "UdpStreamData", "data" }));
callbacksList.Add(Tuple.Create("PortMappingChanged", new[] { "Bolt.INatDevice", "device", "Bolt.IPortMapping", "portMapping" }));

callbacksList.Add(Tuple.Create("SceneLoadLocalBegin", new[] { "string", "map" }));
callbacksList.Add(Tuple.Create("SceneLoadLocalDone", new[] { "string", "map" }));
callbacksList.Add(Tuple.Create("SceneLoadRemoteDone", new[] { "BoltConnection", "connection" }));

callbacksList.Add(Tuple.Create("ConnectAttempt", new[] { "UdpKit.UdpEndPoint", "endpoint" }));

callbacksList.Add(Tuple.Create("Connected", new[] { "BoltConnection", "connection" }));
callbacksList.Add(Tuple.Create("Connected", new[] { "BoltConnection", "connection", "Bolt.IProtocolToken", "acceptToken" }));
callbacksList.Add(Tuple.Create("Connected", new[] { "BoltConnection", "connection", "Bolt.IProtocolToken", "acceptToken", "Bolt.IProtocolToken", "connectToken" }));

callbacksList.Add(Tuple.Create("ConnectFailed", new []{"UdpEndPoint", "endpoint" }));
callbacksList.Add(Tuple.Create("ConnectRequest", new []{"UdpEndPoint", "endpoint" }));
callbacksList.Add(Tuple.Create("ConnectRequest", new []{"UdpEndPoint", "endpoint", "Bolt.IProtocolToken", "token" }));
callbacksList.Add(Tuple.Create("ConnectRefused", new []{"UdpEndPoint", "endpoint" }));
callbacksList.Add(Tuple.Create("ConnectRefused", new []{"UdpEndPoint", "endpoint", "Bolt.IProtocolToken", "token" }));

callbacksList.Add(Tuple.Create("Disconnected", new[] { "BoltConnection", "connection" }));
callbacksList.Add(Tuple.Create("Disconnected", new[] { "BoltConnection", "connection", "Bolt.IProtocolToken", "token" }));

callbacksList.Add(Tuple.Create("ControlOfEntityLost", new []{"BoltEntity", "entity"}));
callbacksList.Add(Tuple.Create("ControlOfEntityGained", new []{"BoltEntity", "entity"}));

callbacksList.Add(Tuple.Create("ControlOfEntityLost", new []{"BoltEntity", "entity", "Bolt.IProtocolToken", "token"}));
callbacksList.Add(Tuple.Create("ControlOfEntityGained", new []{"BoltEntity", "entity", "Bolt.IProtocolToken", "token"}));

callbacksList.Add(Tuple.Create("EntityAttached", new []{"BoltEntity", "entity"}));
callbacksList.Add(Tuple.Create("EntityDetached", new []{"BoltEntity", "entity"}));

callbacksList.Add(Tuple.Create("EntityAttached", new []{"BoltEntity", "entity", "Bolt.IProtocolToken", "token"}));
callbacksList.Add(Tuple.Create("EntityDetached", new []{"BoltEntity", "entity", "Bolt.IProtocolToken", "token"}));

callbacksList.Add(Tuple.Create("EntityReceived", new[] { "BoltEntity", "entity" }));

#>
using UdpKit;
using UnityEngine;

namespace BoltInternal {

partial class GlobalEventListenerBase {
  <# foreach (var cb in callbacksList) { 
	var name = cb.Item1;
    var pairs = cb.Item2.Select((value, index) => new { value, index } ).GroupBy(x => x.index / 2, x => x.value);
    var args = String.Join(", ", pairs.Select(x => String.Join(" ", x.ToArray())).ToArray());
    var callArgs = String.Join(", ", cb.Item2.Select((value, index) => new { value, index } ).Where(x => x.index % 2 == 1).Select(x => x.value).ToArray());
  #>

  public virtual void <#= name #>(<#= args #>) {  }

  internal static void <#= name #>Invoke(<#= args #>) { 
    BoltLog.Debug("Invoking callback <#= name #>");
    foreach (GlobalEventListenerBase cb in callbacks) {
		try {
			cb.<#= name #>(<#= callArgs #>);
		} catch(System.Exception exn) {
			BoltLog.Exception(exn);
		}
    }
  }

  <# } #>
}
}